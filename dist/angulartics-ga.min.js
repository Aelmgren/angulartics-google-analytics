!function(window,angular,undefined){"use strict";angular.module("angulartics.google.analytics",["angulartics"]).config(["$analyticsProvider",function($analyticsProvider){function dimensionsAndMetrics(properties){if(detectUniversalAnalytics()){var key,customData={};for(key in properties)key.indexOf("dimension")&&key.indexOf("metric")||(customData[key]=properties[key]);return customData}}function eventTrack(action,properties){if(!$analyticsProvider.settings.ga.disableEventTracking){if(properties&&properties.category||(properties=properties||{},properties.category="Event"),properties.value){var parsed=parseInt(properties.value,10);properties.value=isNaN(parsed)?0:parsed}if(properties.hitCallback&&"function"!=typeof properties.hitCallback&&(properties.hitCallback=null),properties.hasOwnProperty("nonInteraction")||(properties.nonInteraction=properties.noninteraction),detectUniversalAnalytics()){var eventOptions={eventCategory:properties.category,eventAction:action,eventLabel:properties.label,eventValue:properties.value,nonInteraction:properties.nonInteraction,page:properties.page||window.location.hash.substring(1)||window.location.pathname,userId:$analyticsProvider.settings.ga.userId,hitCallback:properties.hitCallback},dimsAndMets=dimensionsAndMetrics(properties);angular.extend(eventOptions,dimsAndMets),$analyticsProvider.settings.ga.transport&&angular.extend(eventOptions,$analyticsProvider.settings.ga.transport),ga("send","event",eventOptions),angular.forEach($analyticsProvider.settings.ga.additionalAccountNames,function(accountName){ga(accountName+".send","event",eventOptions)})}else detectClassicAnalytics()&&_gaq.push(["_trackEvent",properties.category,action,properties.label,properties.value,properties.nonInteraction])}}function transactionTrackUa(transaction){var product,item,i,isEnhancedEcommerce=$analyticsProvider.settings.ga.enhancedEcommerce,plugin=isEnhancedEcommerce?"ec":"ecommerce",addTransCmd=isEnhancedEcommerce?["ec:setAction","purchase"]:["ecommerce:addTransaction"],addItemCmd=isEnhancedEcommerce?"ec:addProduct":"ecommerce:addItem",dimsAndMets=dimensionsAndMetrics(transaction),purchase={id:transaction.id,affiliation:transaction.affiliation,revenue:transaction.revenue,tax:transaction.tax,shipping:transaction.shipping,coupon:transaction.coupon,currency:transaction.currency,currencyCode:transaction.currency};for(isEnhancedEcommerce||angular.extend(purchase,dimsAndMets),addTransCmd.push(purchase),ga("require",plugin),ga.apply(this,addTransCmd),i=0;i<transaction.products.length;i++)product=transaction.products[i],item=angular.extend(dimensionsAndMetrics(product),{name:product.name,price:product.price,category:product.category,quantity:product.quantity}),isEnhancedEcommerce?(item.brand=product.brand,item.variant=product.variant,item.coupon=product.coupon,item.id=product.id,item.currencyCode=product.currencyCode):(item.id=transaction.id,item.sku=product.id,item.currency=product.currencyCode),ga(addItemCmd,item);isEnhancedEcommerce?eventTrack(purchase.id,angular.extend(dimsAndMets,{category:"Enhanced Ecommerce",nonInteraction:!0})):ga("ecommerce:send",dimsAndMets)}function transactionTrackClassic(transaction){var product,item,i,purchase=["_addTrans",transaction.id,transaction.affiliation,transaction.total,transaction.tax,transaction.shipping,transaction.billingCity,transaction.billingRegion,transaction.billingCountry];for(_gaq.push(purchase),i=0;i<transaction.products.length;i++)product=transaction.products[i],item=["_addItem",transaction.id,product.id,product.name,product.category,product.price,product.quantity],_gaq.push(item);transaction.currencyCode&&_gaq.push(["_set","currencyCode",transaction.currencyCode]),_gaq.push(["_trackTrans"])}function detectUniversalAnalytics(){var gaNamespace=window.GoogleAnalyticsObject;return gaNamespace&&window[gaNamespace]}function detectClassicAnalytics(){return"undefined"!=typeof window._gaq}$analyticsProvider.settings.pageTracking.trackRelativePath=!0,$analyticsProvider.settings.ga={additionalAccountNames:undefined,disableEventTracking:null,disablePageTracking:null,userId:null,enhancedEcommerce:!1},$analyticsProvider.registerPageTrack(function(path,properties){if(!$analyticsProvider.settings.ga.disablePageTracking&&(detectClassicAnalytics()&&(_gaq.push(["_trackPageview",path]),angular.forEach($analyticsProvider.settings.ga.additionalAccountNames,function(accountName){_gaq.push([accountName+"._trackPageview",path])})),detectUniversalAnalytics())){var dimsAndMets=dimensionsAndMetrics(properties);$analyticsProvider.settings.ga.userId&&ga("set","userId",$analyticsProvider.settings.ga.userId),ga("send","pageview",path,dimsAndMets),angular.forEach($analyticsProvider.settings.ga.additionalAccountNames,function(accountName){ga(accountName+".send","pageview",path,dimsAndMets)})}}),$analyticsProvider.registerEventTrack(eventTrack),$analyticsProvider.registerExceptionTrack(function(error,cause){eventTrack(error.toString(),{category:"Exceptions",label:error.stack,nonInteraction:!0})}),$analyticsProvider.registerSetUsername(function(userId){$analyticsProvider.settings.ga.userId=userId}),$analyticsProvider.registerSetUserProperties(function(properties){if(properties&&detectUniversalAnalytics()){var dimsAndMets=dimensionsAndMetrics(properties);ga("set",dimsAndMets)}}),$analyticsProvider.registerUserTimings(function(properties){return properties&&properties.timingCategory&&properties.timingVar&&"undefined"!=typeof properties.timingValue?void(detectUniversalAnalytics()&&ga("send","timing",properties)):void console.log("Properties timingCategory, timingVar, and timingValue are required to be set.")}),$analyticsProvider.registerTransactionTrack(function(transaction){return transaction.id||transaction.id+""=="0"?detectUniversalAnalytics()?transactionTrackUa(transaction):detectClassicAnalytics()?transactionTrackClassic(transaction):void 0:console.log("Missing required field transaction.id")})}])}(window,window.angular);
//# sourceMappingURL=../dist/angulartics-ga.min.js.map